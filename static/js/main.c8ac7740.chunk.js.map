{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["VaccineTable","props","getData","fetch","headers","then","response","json","vaccineAvailability","setState","data","state","this","rows","React","Component","LastUpdated","getLastUpdated","lastUpdated","moment","unix","format","App","className","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4SAMMA,E,kDACJ,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAIRC,QAAU,WACRC,MAAM,YACL,CACCC,QAAU,CACR,eAAgB,mBAChB,OAAU,sBAGZC,MAAK,SAACC,GACJ,OAAOA,EAASC,UACjBF,MAAK,SAACG,GACL,EAAKC,SAAS,CAACC,KAAMF,QAdzB,EAAKG,MAAQ,CAACD,KAAM,IAFH,E,qDAoBnB,WACIE,KAAKV,Y,oBAGT,WACE,OACE,cAAC,IAAD,CAAWW,KAAOD,KAAKD,MAAMD,W,GA3BRI,IAAMC,WAiC3BC,E,kDACJ,WAAYf,GAAQ,IAAD,8BACjB,cAAMA,IAIRgB,eAAiB,WACfd,MAAM,oBACL,CACCC,QAAU,CACR,eAAgB,mBAChB,OAAU,sBAGZC,MAAK,SAACC,GACJ,OAAOA,EAASC,UACjBF,MAAK,SAACa,GACL,EAAKT,SAAS,CACVS,YAAaC,IAAOC,KAAKF,EAAW,cAAkBG,OAAO,6BAfrE,EAAKV,MAAQ,CAACO,YAAa,MAFV,E,qDAsBnB,WACIN,KAAKK,mB,oBAGT,WACE,OACI,8BACA,kDAAqBL,KAAKD,MAAMO,YAAhC,a,GA9BkBJ,IAAMC,WA+CjBO,MAVf,WAEE,OACE,sBAAKC,UAAU,MAAf,UACC,cAAC,EAAD,IACA,cAAC,EAAD,QCrEUC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBrB,MAAK,YAAkD,IAA/CsB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.c8ac7740.chunk.js","sourcesContent":["import './App.css';\nimport moment from 'moment'\nimport React from \"react\";\nimport JsonTable from \"ts-react-json-table\";\n\n\nclass VaccineTable extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {data: []};\n  }\n\n  getData = () => {\n    fetch('data.json'\n    ,{\n      headers : {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n       }\n    }\n    ).then((response) => {\n        return response.json();\n    }).then((vaccineAvailability) => {\n        this.setState({data: vaccineAvailability});\n    });\n  };\n\n  componentDidMount() {\n      this.getData();\n  }\n\n  render() {\n    return (\n      <JsonTable rows={ this.state.data } />\n    );\n  }\n}\n\n\nclass LastUpdated extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {lastUpdated: null};\n  }\n\n  getLastUpdated = () => {\n    fetch('last-updated.json'\n    ,{\n      headers : {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n       }\n    }\n    ).then((response) => {\n        return response.json();\n    }).then((lastUpdated) => {\n        this.setState({\n            lastUpdated: moment.unix(lastUpdated[\"last_updated\"]).format(\"YYYY-MM-DDTHH:mm:ss\")\n        });\n    });\n  };\n\n  componentDidMount() {\n      this.getLastUpdated();\n  }\n\n  render() {\n    return (\n        <div>\n        <h2>Last updated at {this.state.lastUpdated} </h2>\n        </div>\n    );\n  }\n}\n\n\nfunction App() {\n\n  return (\n    <div className=\"App\">\n     <LastUpdated />\n     <VaccineTable />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}